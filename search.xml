<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>取模意义的快速幂黑科技：龟速乘</title>
      <link href="2020/11/22/ksm-slowpow/"/>
      <url>2020/11/22/ksm-slowpow/</url>
      
        <content type="html"><![CDATA[<p><strong>一般的快速幂：</strong></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">ll ksm(ll a,ll n,ll m){ll ans=1;while(n){if(n&amp;1) ans=ans*a%m;a=a*a%m;n&gt;&gt;=1;}return ans;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样会存在一个问题，当求$a^b\pmod{m}，$且$a&gt;10^9$时，会存在爆$long\ long$的问题，这时候我们需要对乘法取模进行改正，于是便有了龟速乘。</p><hr><p><strong>龟速乘：</strong></p><p>为什么要叫龟速乘呢，因为这个乘法运算比计算机底层的乘法速度要慢。<br>先看代码：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">ll qmul(ll x,ll y,ll m){//龟速乘 ll s=0;while(y){if(y&amp;1) s=(s+x)%m;x=(x+x)%m;y&gt;&gt;=1; }return s;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>形式与快速幂非常相似，只不过里面的乘法变成加法了，<br>比如$2\times 5= 2+2\times 4=2+4\times 2=2+8=10$。</p><p>时间复杂度：$O(logy)$</p><p>快速幂和龟速乘搭配一起就可以欢乐地进行模意义下的快速幂了。</p><p>复杂度：$O(logn\times log(a))$</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">ll qmul(ll x,ll y,ll m){//龟速乘 ll s=0;while(y){if(y&amp;1) s=(s+x)%m;x=(x+x)%m;y&gt;&gt;=1; }return s;}///////////////ll ksm(ll a,ll n,ll m){ll ans=1;while(n){if(n&amp;1) ans=qmul(ans,a,m);a=qmul(a,a,m);n&gt;&gt;=1;}return ans;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="例题：-U55950-【模板】扩展欧拉定理"><a href="#例题：-U55950-【模板】扩展欧拉定理" class="headerlink" title="例题： U55950 【模板】扩展欧拉定理"></a>例题： U55950 【模板】扩展欧拉定理</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">#include&lt;bits/stdc++.h&gt;using namespace std;typedef long long ll;const int N=1e3+5,M=2e4+5,inf=0x3f3f3f3f,mod=1e9+7;#define mst(a,b) memset(a,b,sizeof a)#define PII pair&lt;int,int&gt;#define fi first#define se second#define pb push_backbool f;inline void read(ll &amp;s){int w=1;char c;while(c=getchar(),!isdigit(c)){if(c=='-') w=-1;}while(isdigit(c)) s=(s&lt;&lt;3)+(s&lt;&lt;1)+(c&amp;15),c=getchar();s*=w;}inline ll readm(ll m){ll s=0;char c;while(c=getchar(),!isdigit(c)) ;while(isdigit(c)){s=(s&lt;&lt;3)+(s&lt;&lt;1)+(c&amp;15);if(s&gt;=m){s%=m;f=true;}c=getchar();}return s;}ll phi(ll n){ll s=n;for(ll i=2;i*i&lt;=n;i++){if(n%i==0){s-=s/i;while(n%i==0) n/=i;}}if(n&gt;1) s-=s/n;return s;}ll qmul(ll x,ll y,ll m){//龟速乘 ll s=0;while(y){if(y&amp;1) s=(s+x)%m;x=(x+x)%m;y&gt;&gt;=1; }return s;}ll a,m,b;ll ksm(ll a,ll n,ll m){ll ans=1;while(n){if(n&amp;1) ans=qmul(ans,a,m);a=qmul(a,a,m);n&gt;&gt;=1;}return ans;}int main(){read(a),read(m);ll phim=phi(m);b=readm(phim);printf("%lld\n",ksm(a,b+(f?phim:0),m));return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我的博客要搬家了</title>
      <link href="2020/11/22/moving-home/"/>
      <url>2020/11/22/moving-home/</url>
      
        <content type="html"><![CDATA[<h1 id="我的博客准备搬家了"><a href="#我的博客准备搬家了" class="headerlink" title="我的博客准备搬家了"></a>我的博客准备搬家了</h1><p><strong>hexo</strong>真是太好玩了，继续$Working$中。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">include&lt;bits/stdc++.h&gt;using namespace std;int main(){return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
